Эвристики и мнемоники для тестирования API (Vader)

Эвристика для тестирования REST API от Stuart Ashman, автора блога. Она дает отличную возможность разделить зоны ответственности, улучшает тестовое покрытие и отлично подходит для тестирования микросервисов.

Verbs (глаголы)
Get — запрашивает информацию из указанного источника и не влияет на его содержимое. Запрос доступен для кэширования данных и добавления в закладки. Длина запроса ограничена (максимальная длина URL — 2048 символов).

Post — используется для отправки данных, что может оказывать влияние на содержимое ресурса. В отличие от метода Get, запросы Post не могут быть кэшированы, они не остаются в истории браузера и их нельзя добавить в закладки. Эти запросы не ограничиваются в объеме.

Put — загружает содержимое запроса на указанный в запросе URI. Если по заданному URI ресурса нет, то сервер создает его, возвращая статус 201 (Created).

Patch — для частичного изменения ресурса.

Delete — удаляет все текущие данные на ресурсе, определённом URI.

Options — используется для описания параметров коммуникации между клиентом и сервером.

Authorization (авторизация)
Token — предоставляет информацию о событии аутентификации и идентифицирует пользователя.

API Key — уникальный идентификатор, используемый для аутентификации пользователя, разработчика или вызывающей программы в API. Однако они обычно используются для аутентификации проекта с помощью API, а не для пользователя.

Token / key / user&pass not in URL — токен / API-ключ / имя пользователя и пароль передаются не в URL.

Token / key / user&pass not logged — токен / API-ключ / имя пользователя и пароль неавторизованного пользователя.

Response data is auth’d (no multi / cross tenant data) — данные в ответе авторизированны (множественные или перекрестные данные отсутствуют).

Data (данные)
Serialization (сериализация) — процесс перевода какой-либо структуры данных в последовательность битов. Используется для передачи объектов по сети и для сохранения их в файлы.

Type (тип данных) — множество значений и операций над этими значениями.

Format (формат данных) — спецификация структуры данных, записанных в компьютерном файле.

Size (размер данных) — сколько данных содержит файл или сколько памяти он потребляет.

Pagination (пагинация) — порядковая нумерация страниц, которая в основном размещается вверху либо внизу страниц сайта.

Errors (ошибки)
Response codes (status codes — коды состояния HTTP) — часть первой строки ответа сервера при запросах по протоколу HTTP.

Message payloads (полезные сообщения, сообщения полей, набор полей) называется частью передаваемого пакета данных, в котором находится фактическое сообщение. Сетевые протоколы устанавливают максимальный предел длины полезной нагрузки.

Responsiveness (адаптивность)
Fail fast (Fail Fast — Fail Cheap! Принцип «провались быстро») — когда в приложении происходит ошибка, есть два диаметрально противоположных подхода к ее обработке:

Forgive! подход: приложение продолжает выполняться и старается минимизировать последствия ошибки.
Fail Fast! подход: приложение немедленно прекращает работу и сообщает об ошибке.
Timeouts (время ожидания) — параметр, связанный с совершением события и предназначен для оценки его завершения за определенное время.

Concurrency (конкурентность) — это свойство программы, при котором допускается одновременное выполнение нескольких вычислительных процессов, которые могут взаимодействовать друг с другом.