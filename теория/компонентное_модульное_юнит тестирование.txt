компонентное_модульное_юнит тестирование

Давайте разберёмся, что такое модульное, компонентное и юнит-тестирование?
Глоссарий ISTQB даёт нам следующие определения:
Модульное тестирование (module testing, unit testing): см. компонентное тестирование
Компонентное тестирование (component testing): тестирование отдельных компонентов программного обеспечения (согласно IEEE 610)
Компонент (component): Наименьший элемент программного обеспечения, который может быть протестирован отдельно.



Компонентное (модульное) тестирование проверяет функциональность и ищет дефекты в частях приложения, которые доступны и могут быть протестированы по-отдельности (модули программ, объекты, классы, функции и т.д.). Обычно компонентное (модульное) тестирование проводится вызывая код, который необходимо проверить и при поддержке сред разработки, таких как фреймворки (frameworks - каркасы) для модульного тестирования или инструменты для отладки. Все найденные дефекты, как правило исправляются в коде без формального их описания в системе менеджмента багов (Bug Tracking System).

По-существу эти уровни тестирования представляют одно и тоже, разница лишь в том, что в компонентном тестировании в качестве параметров функций используют реальные объекты и драйверы, а в модульном тестировании - конкретные значения.



Модульное тестирование :
Модульное тестирование — это тип уровня тестирования программного обеспечения, на котором тестируются все отдельные компоненты программного обеспечения. Модульное тестирование обычно выполняется разработчиком. Модульное тестирование нельзя использовать для тех систем, которые имеют большую взаимозависимость между различными модулями. Это не позволяет проводить параллельное тестирование.

Тестирование сэндвичей :
Сэндвич-тестирование также называется гибридным интеграционным тестированием. Сэндвич-тестирование включает в себя тестирование подхода «снизу вверх» и тестирование «сверху вниз», поэтому в нем используется преимущество подхода «снизу вверх» и подхода «сверху вниз». Сэндвич-тестирование также нельзя использовать для тех систем, которые имеют большую взаимозависимость между различными модулями, и это позволяет проводить параллельное тестирование.